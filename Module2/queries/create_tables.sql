CREATE SCHEMA dw;

---- CREATE DIMENSION TABLES


-- CUSTOMERS

DROP TABLE IF EXISTS dw.customers CASCADE;
CREATE TABLE dw.customers (
	customer_uid  integer GENERATED BY DEFAULT AS IDENTITY (START 10000),
	customer_id   varchar(25) NOT NULL,
	customer_name varchar(50) NOT NULL,
	segment       varchar(40) NOT NULL,
	CONSTRAINT PK_customers PRIMARY KEY ( customer_uid )
);
TRUNCATE TABLE dw.customers;


-- REGIONS

DROP TABLE IF EXISTS dw.regions;
CREATE TABLE dw.regions (
	region_uid   integer GENERATED BY DEFAULT AS IDENTITY,
	person       varchar(50) NULL,
	region       varchar(50) NOT NULL,
	CONSTRAINT PK_regions PRIMARY KEY ( region_uid )
);
TRUNCATE TABLE dw.regions;


-- GEOGRAPHY

DROP TABLE IF EXISTS dw.geography;
CREATE TABLE dw.geography (
	geo_id      integer GENERATED BY DEFAULT AS IDENTITY (START 1000),
	country     varchar(50) NOT NULL,
	"state"     varchar(50) NOT NULL,
	city        varchar(50) NOT NULL,
	postal_code varchar(20) NOT NULL,
	region_uid  integer,
	CONSTRAINT PK_geography PRIMARY KEY ( geo_id )
);
TRUNCATE TABLE dw.geography;


-- PRODUCTS

DROP TABLE IF EXISTS dw.products;
CREATE TABLE dw.products (
	product_uid     integer GENERATED BY DEFAULT AS IDENTITY (START 100000),	
	product_id      varchar(30) NOT NULL,
	product_name    varchar(150) NOT NULL,
	category        varchar(30) NOT NULL,
	sub_category  varchar(30) NOT NULL,
	CONSTRAINT PK_products PRIMARY KEY ( product_uid )
);
TRUNCATE TABLE dw.products;


-- ORDERS

DROP TABLE IF EXISTS dw.orders;
CREATE TABLE dw.orders (
	row_id       integer GENERATED BY DEFAULT AS IDENTITY,
	order_id     varchar(25) NOT NULL,
	order_uid    integer GENERATED BY DEFAULT AS IDENTITY (START WITH 1000000),
	order_date   date NOT NULL,
	product_uid  integer NOT NULL,
	customer_uid integer NOT NULL,
	CONSTRAINT PK_orders PRIMARY KEY ( row_id )
);
TRUNCATE TABLE dw.orders;


-- SHIPPING

DROP TABLE IF EXISTS dw.shipping;
CREATE TABLE dw.shipping (
	order_uid integer NOT NULL,
	order_id  varchar(25) NOT NULL,
	ship_date date NULL,
	ship_mode varchar(25) NOT NULL,
	geo_id    integer NOT NULL,
	CONSTRAINT PK_shipping PRIMARY KEY ( order_uid )
);
TRUNCATE TABLE dw.shipping;


-- RETURNS

DROP TABLE IF EXISTS dw."returns";
CREATE TABLE dw."returns" (
	row_id   integer NOT NULL,
	returned boolean NOT NULL,
	CONSTRAINT PK_returns PRIMARY KEY ( row_id )
);
TRUNCATE TABLE dw."returns";